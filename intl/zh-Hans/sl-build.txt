使用：{{%MAIN%}[选择余地〕在的基础上建立一个节应用包裹。没有选择余地，未履行在是否一无用的人仓库被察觉上视情况而定。如果一{{git}仓库被察觉，未履行是`{{--git}`：安装和把外型结果交付给将被建立，如果它不确实已经存在的“{{deploy}”分枝。如果没有{{git}仓库被察觉，未履行是`{{--npm}`：安装和把塞进一`{{<package-name>-<version>.tgz}`关于的文件外型结果。选择余地：  {{-h,--help}以加印这信息和从出去。{{-v,--version}印刷版本  和出口。{{-n,--npm}和`{{--install --pack}`同样的。{{-g,--git}和  `{{--install --commit}`同样的。没有按缺省的字体的{{-i,--install}安装  附属国。如果安装的{{-s,--scripts},在的基础上建立附带  加上去的东西的跑步字体。变为一可出版的档案文  件的{{-p,--pack}包。Git 所特有选择余地：  {{-c,--commit}犯外型从输出到(经过{{--onto}）指定分枝作为的。{{--onto BRANCH}向前犯外型结果的建立，如果  必然的分枝(按缺省的{{deploy}。
